{"version":3,"sources":["../../src/helpers/contents.js"],"names":["helper","MarkdownContents","require","compile","config","context","tree","maxLevel","gitdown","getConfig","headingNesting","enabled","markdown","nestIds","articles","rootId","findRoot","descendants","treeToMarkdown","forEach","article","index","level","notFirst","found","length","id","Error","parentIds","ids","concat","join","weight","module","exports"],"mappings":";;AAAA,MAAMA,SAAS,EAAf;AACA,MAAMC,mBAAmBC,QAAQ,mBAAR,CAAzB;;AAEAF,OAAOG,OAAP,GAAiB,YAA0B;AAAA,MAAzBC,MAAyB,yDAAhB,EAAgB;AAAA,MAAZC,OAAY;;AACzC,MAAIC,IAAJ;;AAEAF,SAAOG,QAAP,GAAkBH,OAAOG,QAAP,IAAmB,CAArC;;AAEA,MAAIF,QAAQG,OAAR,CAAgBC,SAAhB,GAA4BC,cAA5B,CAA2CC,OAA/C,EAAwD;AACtDL,WAAOL,iBAAiBI,QAAQO,QAAzB,EAAmCN,IAAnC,EAAP;AACAA,WAAON,OAAOa,OAAP,CAAeP,IAAf,CAAP;AACD,GAHD,MAGO;AACL,UAAMQ,WAAWb,iBAAiBI,QAAQO,QAAzB,EAAmCE,QAAnC,EAAjB;;AAEAR,WAAOL,iBAAiBK,IAAjB,CAAsBQ,QAAtB,EAAgC,IAAhC,EAAsC,EAAtC,CAAP;AACD;;AAED,MAAIV,OAAOW,MAAX,EAAmB;AACjBT,WAAON,OAAOgB,QAAP,CAAgBV,IAAhB,EAAsBF,OAAOW,MAA7B,EAAqCE,WAA5C;AACD;;AAEDX,SAAON,OAAOO,QAAP,CAAgBD,IAAhB,EAAsBF,OAAOG,QAA7B,CAAP;;AAEA,SAAON,iBAAiBiB,cAAjB,CAAgCZ,IAAhC,CAAP;AACD,CArBD;;AAuBA;;;;;AAKAN,OAAOO,QAAP,GAAkB,UAACD,IAAD,EAAwB;AAAA,MAAjBC,QAAiB,yDAAN,CAAM;;AACxCD,OAAKa,OAAL,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/B,QAAID,QAAQE,KAAR,GAAgBf,QAApB,EAA8B;AAC5B,aAAOD,KAAKe,KAAL,CAAP;AACD,KAFD,MAEO;AACLD,cAAQH,WAAR,GAAsBjB,OAAOO,QAAP,CAAgBa,QAAQH,WAAxB,EAAqCV,QAArC,CAAtB;AACD;AACF,GAND;;AAQA,SAAOD,IAAP;AACD,CAVD;;AAYA;;;AAGAN,OAAOgB,QAAP,GAAkB,CAACV,IAAD,EAAOS,MAAP,EAAeQ,QAAf,KAA4B;AAC5C,MAAIC,KAAJ,EACEH,KADF;;AAGAA,UAAQf,KAAKmB,MAAb;;AAEA,SAAOJ,OAAP,EAAgB;AACd,QAAIf,KAAKe,KAAL,EAAYK,EAAZ,KAAmBX,MAAvB,EAA+B;AAC7BS,cAAQlB,KAAKe,KAAL,CAAR;;AAEA;AACD,KAJD,MAIO;AACLG,cAAQxB,OAAOgB,QAAP,CAAgBV,KAAKe,KAAL,EAAYJ,WAA5B,EAAyCF,MAAzC,EAAiD,IAAjD,CAAR;AACD;AACF;;AAED,MAAI,CAACQ,QAAD,IAAa,CAACC,KAAlB,EAAyB;AACvB,UAAM,IAAIG,KAAJ,CAAU,0CAA0CZ,MAA1C,GAAmD,KAA7D,CAAN;AACD;;AAED,SAAOS,KAAP;AACD,CArBD;;AAuBA;;;AAGAxB,OAAOa,OAAP,GAAiB,UAACP,IAAD,EAA0B;AAAA,MAAnBsB,SAAmB,yDAAP,EAAO;;AACzCtB,OAAKa,OAAL,CAAcC,OAAD,IAAa;AACxB,UAAMS,MAAMD,UAAUE,MAAV,CAAiB,CAACV,QAAQM,EAAT,CAAjB,CAAZ;;AAEAN,YAAQM,EAAR,GAAaG,IAAIE,IAAJ,CAAS,GAAT,CAAb;;AAEA/B,WAAOa,OAAP,CAAeO,QAAQH,WAAvB,EAAoCY,GAApC;AACD,GAND;;AAQA,SAAOvB,IAAP;AACD,CAVD;;AAYAN,OAAOgC,MAAP,GAAgB,GAAhB;;AAEAC,OAAOC,OAAP,GAAiBlC,MAAjB","file":"contents.js","sourcesContent":["const helper = {};\nconst MarkdownContents = require('markdown-contents');\n\nhelper.compile = (config = {}, context) => {\n  let tree;\n\n  config.maxLevel = config.maxLevel || 3;\n\n  if (context.gitdown.getConfig().headingNesting.enabled) {\n    tree = MarkdownContents(context.markdown).tree();\n    tree = helper.nestIds(tree);\n  } else {\n    const articles = MarkdownContents(context.markdown).articles();\n\n    tree = MarkdownContents.tree(articles, true, []);\n  }\n\n  if (config.rootId) {\n    tree = helper.findRoot(tree, config.rootId).descendants;\n  }\n\n  tree = helper.maxLevel(tree, config.maxLevel);\n\n  return MarkdownContents.treeToMarkdown(tree);\n};\n\n/**\n * Removes tree descendants with level greater than maxLevel.\n *\n * @private\n */\nhelper.maxLevel = (tree, maxLevel = 1) => {\n  tree.forEach((article, index) => {\n    if (article.level > maxLevel) {\n      delete tree[index];\n    } else {\n      article.descendants = helper.maxLevel(article.descendants, maxLevel);\n    }\n  });\n\n  return tree;\n};\n\n/**\n * @private\n */\nhelper.findRoot = (tree, rootId, notFirst) => {\n  let found,\n    index;\n\n  index = tree.length;\n\n  while (index--) {\n    if (tree[index].id === rootId) {\n      found = tree[index];\n\n      break;\n    } else {\n      found = helper.findRoot(tree[index].descendants, rootId, true);\n    }\n  }\n\n  if (!notFirst && !found) {\n    throw new Error('Heading does not exist with rootId (\"' + rootId + '\").');\n  }\n\n  return found;\n};\n\n/**\n * @private\n */\nhelper.nestIds = (tree, parentIds = []) => {\n  tree.forEach((article) => {\n    const ids = parentIds.concat([article.id]);\n\n    article.id = ids.join('-');\n\n    helper.nestIds(article.descendants, ids);\n  });\n\n  return tree;\n};\n\nhelper.weight = 100;\n\nmodule.exports = helper;\n"]}