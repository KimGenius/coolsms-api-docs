{"version":3,"sources":["../../src/helpers/badge.js"],"names":["helper","fs","require","jsonfile","compile","config","context","services","name","Error","badgeStyle","pkg","locator","repositoryPath","existsSync","readFileSync","badge","bower","david","gitinfo","parser","helpers","repository","gitter","coveralls","branch","circleci","travis","rep","waffle","appveyor","username","weight","module","exports"],"mappings":"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","file":"badge.js","sourcesContent":["const helper = {};\nconst fs = require('fs');\nconst jsonfile = require('jsonfile');\n\nhelper.compile = (config = {}, context) => {\n  const services = {};\n\n  if (!config.name) {\n    throw new Error('config.name must be provided.');\n  }\n\n  const badgeStyle = 'style=flat-square';\n\n  services['npm-version'] = () => {\n    let pkg;\n\n    pkg = context.locator.repositoryPath() + '/package.json';\n\n    if (!fs.existsSync(pkg)) {\n      throw new Error('./package.json is not found.');\n    }\n\n    pkg = jsonfile.readFileSync(pkg);\n\n    const badge = '![NPM version](http://img.shields.io/npm/v/' + pkg.name + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://www.npmjs.org/package/' + pkg.name + ')';\n  };\n\n  services['bower-version'] = () => {\n    let bower;\n\n    bower = context.locator.repositoryPath() + '/bower.json';\n\n    if (!fs.existsSync(bower)) {\n      throw new Error('./bower.json is not found.');\n    }\n\n    bower = jsonfile.readFileSync(bower);\n\n    const badge = '![Bower version](http://img.shields.io/bower/v/' + bower.name + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](http://bower.io/search/?q=' + bower.name + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/10\n   */\n  services.david = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Dependency Status](https://img.shields.io/david/' + repository + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://david-dm.org/' + repository + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/10\n   */\n  services['david-dev'] = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Development Dependency Status](https://img.shields.io/david/dev/' + repository + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://david-dm.org/' + repository + '#info=devDependencies)';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/12\n   */\n  services.gitter = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Gitter chat](https://img.shields.io/gitter/room/' + repository + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://gitter.im/' + repository + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/13\n   */\n  services.coveralls = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const branch = gitinfo.compile({name: 'branch'}, context);\n    const badge = '![Coverage Status](https://img.shields.io/coveralls/' + repository + '/' + branch + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://coveralls.io/r/' + repository + '?branch=' + branch + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/33\n   */\n  services.circleci = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const branch = gitinfo.compile({name: 'branch'}, context);\n    const badge = '![Circle CI](https://img.shields.io/circleci/project/' + repository + '/circleci/' + branch + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://circleci.com/gh/' + repository + '?branch=' + branch + ')';\n  };\n\n  /**\n   * @todo Link does not include travis branch.\n   */\n  services.travis = () => {\n    const rep = {};\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n\n    rep.branch = gitinfo.compile({name: 'branch'}, context);\n\n    const badge = '![Travis build status](http://img.shields.io/travis/' + repository + '/' + rep.branch + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://travis-ci.org/' + repository + ')';\n  };\n\n  services.waffle = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Stories in Ready](https://badge.waffle.io/' + repository + '.svg?label=ready&title=Ready)';\n\n    return '[' + badge + '](https://waffle.io/' + repository + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/16\n   */\n  services['codeclimate-gpa'] = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = 'github/' + gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Code Climate GPA](https://img.shields.io/codeclimate/' + repository + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://codeclimate.com/' + repository + ')';\n  };\n\n  services['codeclimate-coverage'] = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const repository = 'github/' + gitinfo.compile({name: 'username'}, context) + '/' + gitinfo.compile({name: 'name'}, context);\n    const badge = '![Code Climate Coverage](https://img.shields.io/codeclimate/coverage/' + repository + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://codeclimate.com/' + repository + ')';\n  };\n\n  /**\n   * @see https://github.com/gajus/gitdown/issues/35\n   */\n  services.appveyor = () => {\n    const gitinfo = context.parser.helpers().gitinfo;\n    const username = gitinfo.compile({name: 'username'}, context);\n    const name = gitinfo.compile({name: 'name'}, context);\n    const branch = gitinfo.compile({name: 'branch'}, context);\n    const repository = username + '/' + name;\n    const badge = '![AppVeyor build status](https://img.shields.io/appveyor/ci/' + repository + '/' + branch + '.svg?' + badgeStyle + ')';\n\n    return '[' + badge + '](https://ci.appveyor.com/project/' + repository + '/branch/' + branch + ')';\n  };\n\n  if (!services[config.name]) {\n    throw new Error('config.name \"' + config.name + '\" is unknown service.');\n  }\n\n  return services[config.name]();\n};\n\nhelper.weight = 10;\n\nmodule.exports = helper;\n"]}